AWSTemplateFormatVersion: 2010-09-09
Description: |
  This CloudFormation Template is for a static website application named Kittens Carousel and deployed on AWS Simple Storage Service(S3), served through CloudFront and Route 53

Parameters:
  DomainName:
    Description: The DNS name of an existing Amazon Route 53 hosted zone e.g. `clarusway.us`
    Type: AWS::Route53::HostedZone::Id

  KittensDomainName:
    Description: Please write full domain name for your application... (www.example.com)
    Type: String
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
  
Resources:

  KittensBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref KittensDomainName
      WebsiteConfiguration:
        IndexDocument: index.html
        
  KittensBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: "String" # Required
      PolicyDocument: JSON # Required

  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref RootDomainName
      
  myCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - talkan.live
        Comment: "Kittens Carousel CDN"
        DefaultRootObject: "index.html"

  myHostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: "talkan.live"

  mybucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref RootDomainName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html

  myWWWbucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub
          - www.${Domain}
          - Domain: !Ref RootDomainName
      AccessControl: BucketOwnerFullControl
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref mybucket

  myDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub 
          - ${Domain}.
          - Domain: !Ref RootDomainName
      RecordSets:
      - 
        Name: !Ref RootDomainName
        Type: A
        AliasTarget:
          HostedZoneId: !FindInMap [ RegionMap, !Ref 'AWS::Region', S3hostedzoneID]
          DNSName: !FindInMap [ RegionMap, !Ref 'AWS::Region', websiteendpoint]
      -
        Name: !Sub
            - www.${Domain}
            - Domain: !Ref RootDomainName
        Type: CNAME
        TTL: 900
        ResourceRecords:
        - !GetAtt mybucket


Outputs:
  WebsiteURL:
    Value: !GetAtt WebsiteURL
    Description: URL for website hosted on S3

  S3BucketSecureURL:
    Value: !Join
      - ''
      - - 'https://'
        - !GetAtt RootDomainName
    Description: Name of S3 bucket to hold website content